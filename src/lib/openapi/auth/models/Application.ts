/* tslint:disable */
/* eslint-disable */
/**
 * Auth API
 * Auth API API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: nathanfaucett@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Application
 */
export interface Application {
    /**
     * 
     * @type {Date}
     * @memberof Application
     */
    created_at: Date;
    /**
     * 
     * @type {string}
     * @memberof Application
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof Application
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Application
     */
    public_url?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Application
     */
    signup_enabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Application
     */
    signup_password: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Application
     */
    updated_at: Date;
    /**
     * 
     * @type {string}
     * @memberof Application
     */
    uri: string;
}

/**
 * Check if a given object implements the Application interface.
 */
export function instanceOfApplication(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "created_at" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "signup_enabled" in value;
    isInstance = isInstance && "signup_password" in value;
    isInstance = isInstance && "updated_at" in value;
    isInstance = isInstance && "uri" in value;

    return isInstance;
}

export function ApplicationFromJSON(json: any): Application {
    return ApplicationFromJSONTyped(json, false);
}

export function ApplicationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Application {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'created_at': (new Date(json['created_at'])),
        'description': json['description'],
        'id': json['id'],
        'public_url': !exists(json, 'public_url') ? undefined : json['public_url'],
        'signup_enabled': json['signup_enabled'],
        'signup_password': json['signup_password'],
        'updated_at': (new Date(json['updated_at'])),
        'uri': json['uri'],
    };
}

export function ApplicationToJSON(value?: Application | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_at': (value.created_at.toISOString()),
        'description': value.description,
        'id': value.id,
        'public_url': value.public_url,
        'signup_enabled': value.signup_enabled,
        'signup_password': value.signup_password,
        'updated_at': (value.updated_at.toISOString()),
        'uri': value.uri,
    };
}

