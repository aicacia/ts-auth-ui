/* tslint:disable */
/* eslint-disable */
/**
 * Auth API
 * Auth API API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: nathanfaucett@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TokenRequest
 */
export interface TokenRequest {
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    actor_token?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    actor_token_type?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    assertion?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    audience?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    code_verifier?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    grant_type: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    refresh_token?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    requested_token_type?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    resource?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    scope?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    subject_token?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    subject_token_type?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    username?: string;
}

/**
 * Check if a given object implements the TokenRequest interface.
 */
export function instanceOfTokenRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "grant_type" in value;

    return isInstance;
}

export function TokenRequestFromJSON(json: any): TokenRequest {
    return TokenRequestFromJSONTyped(json, false);
}

export function TokenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'actor_token': !exists(json, 'actor_token') ? undefined : json['actor_token'],
        'actor_token_type': !exists(json, 'actor_token_type') ? undefined : json['actor_token_type'],
        'assertion': !exists(json, 'assertion') ? undefined : json['assertion'],
        'audience': !exists(json, 'audience') ? undefined : json['audience'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'code_verifier': !exists(json, 'code_verifier') ? undefined : json['code_verifier'],
        'grant_type': json['grant_type'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'refresh_token': !exists(json, 'refresh_token') ? undefined : json['refresh_token'],
        'requested_token_type': !exists(json, 'requested_token_type') ? undefined : json['requested_token_type'],
        'resource': !exists(json, 'resource') ? undefined : json['resource'],
        'scope': !exists(json, 'scope') ? undefined : json['scope'],
        'subject_token': !exists(json, 'subject_token') ? undefined : json['subject_token'],
        'subject_token_type': !exists(json, 'subject_token_type') ? undefined : json['subject_token_type'],
        'username': !exists(json, 'username') ? undefined : json['username'],
    };
}

export function TokenRequestToJSON(value?: TokenRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'actor_token': value.actor_token,
        'actor_token_type': value.actor_token_type,
        'assertion': value.assertion,
        'audience': value.audience,
        'code': value.code,
        'code_verifier': value.code_verifier,
        'grant_type': value.grant_type,
        'password': value.password,
        'refresh_token': value.refresh_token,
        'requested_token_type': value.requested_token_type,
        'resource': value.resource,
        'scope': value.scope,
        'subject_token': value.subject_token,
        'subject_token_type': value.subject_token_type,
        'username': value.username,
    };
}

