/* tslint:disable */
/* eslint-disable */
/**
 * Auth API
 * Auth API API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: nathanfaucett@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserInfoAddress
 */
export interface UserInfoAddress {
    /**
     * 
     * @type {string}
     * @memberof UserInfoAddress
     */
    country?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfoAddress
     */
    locality?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfoAddress
     */
    postal_code?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfoAddress
     */
    region?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfoAddress
     */
    street_address?: string;
}

/**
 * Check if a given object implements the UserInfoAddress interface.
 */
export function instanceOfUserInfoAddress(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserInfoAddressFromJSON(json: any): UserInfoAddress {
    return UserInfoAddressFromJSONTyped(json, false);
}

export function UserInfoAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserInfoAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'country': !exists(json, 'country') ? undefined : json['country'],
        'locality': !exists(json, 'locality') ? undefined : json['locality'],
        'postal_code': !exists(json, 'postal_code') ? undefined : json['postal_code'],
        'region': !exists(json, 'region') ? undefined : json['region'],
        'street_address': !exists(json, 'street_address') ? undefined : json['street_address'],
    };
}

export function UserInfoAddressToJSON(value?: UserInfoAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'country': value.country,
        'locality': value.locality,
        'postal_code': value.postal_code,
        'region': value.region,
        'street_address': value.street_address,
    };
}

