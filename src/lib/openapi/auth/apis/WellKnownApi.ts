/* tslint:disable */
/* eslint-disable */
/**
 * Auth API
 * Auth API API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: nathanfaucett@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Errors,
  OpenIDConfiguration,
} from '../models/index';
import {
    ErrorsFromJSON,
    ErrorsToJSON,
    OpenIDConfigurationFromJSON,
    OpenIDConfigurationToJSON,
} from '../models/index';

/**
 * WellKnownApi - interface
 * 
 * @export
 * @interface WellKnownApiInterface
 */
export interface WellKnownApiInterface {
    /**
     * 
     * @summary Get openid configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WellKnownApiInterface
     */
    openidConfigurationRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OpenIDConfiguration>>;

    /**
     * Get openid configuration
     */
    openidConfiguration(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OpenIDConfiguration>;

}

/**
 * 
 */
export class WellKnownApi extends runtime.BaseAPI implements WellKnownApiInterface {

    /**
     * Get openid configuration
     */
    async openidConfigurationRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OpenIDConfiguration>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Tenent-Id"] = await this.configuration.apiKey("Tenent-Id"); // ApplicationTenentId authentication
        }

        const response = await this.request({
            path: `/.well-known/openid-configuration`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OpenIDConfigurationFromJSON(jsonValue));
    }

    /**
     * Get openid configuration
     */
    async openidConfiguration(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OpenIDConfiguration> {
        const response = await this.openidConfigurationRaw(initOverrides);
        return await response.value();
    }

}
